#!/usr/bin/env bash

# Most of the ideas are stolen from: https://github.com/SwayKh/dotfiles/blob/main/river/init
# So if you like the way this works, consider dropping a *star* on the original author ^
# Links to default init and wiki if you get lost
# https://codeberg.org/river/river/src/branch/master/example/init
# https://codeberg.org/river/wiki

#-----------------------------------------------------#
#                      SETTINGS                       #
#-----------------------------------------------------#

browser="firefox"
clip="$HOME/.local/bin/menu_scripts/bemenu_clipboard"
emoji="$HOME/.local/bin/menu_scripts/bemenu_emoji"
lang="fi"
mail="thunderbird"
mouse="pointer-9610-54-Glorious_Model_O" # <- Find your inputs by typing "riverctl list-inputs"
powermenu="$HOME/.local/bin/menu_scripts/bemenu_power"
recmenu="$HOME/.local/bin/menu_scripts/bemenu_screenshot"
rivertile="rivertile -main-ratio 0.55 -view-padding 2 -outer-padding 2"
run="$HOME/.local/bin/bemenu_runner run --no-exec --fixed-height -W 0.20 -c -B1 -n -l15 -p run: | xargs riverctl spawn"
screenshot="$HOME/.local/bin/wl-shot"
term="footclient" # <- If you want single instance change: "footclient" > "foot"
# Bar signals
sig_1="pkill -SIGRTMIN+1 waybar"
sig_2="pkill -SIGRTMIN+2 waybar"
sig_3="pkill -SIGRTMIN+3 waybar"

# Inputs
riverctl focus-follows-cursor normal
riverctl input "$mouse" accel-profile flat
riverctl input "$mouse" pointer-accel 0
riverctl keyboard-layout -options caps:escape "$lang"
riverctl set-repeat 50 300

#-----------------------------------------------------#
#                      LOOK                           #
#-----------------------------------------------------#

riverctl background-color 0x000000
#riverctl border-color-focused 0x24837B
riverctl border-color-focused 0x6F6E69
riverctl border-color-unfocused 0x282726
riverctl border-color-urgent 0xa2191f
riverctl border-width 1
riverctl default-attach-mode bottom
riverctl default-layout rivertile

#-----------------------------------------------------#
#                      LAUNCH                         #
#-----------------------------------------------------#

riverctl map normal Super B spawn "$HOME/.config/river/scripts/barhider.sh"
riverctl map normal Super D spawn "$run"
riverctl map normal Super E spawn "$term -T lf -e lf"
riverctl map normal Super F1 spawn "noti_sysnfo"
riverctl map normal Super F10 spawn "$HOME/.config/river/scripts/mic-toggle.sh && $sig_2"
riverctl map normal Super F11 spawn "$HOME/.config/river/scripts/locker.sh"
riverctl map normal Super F12 spawn "$HOME/.config/river/scripts/dot-settings.sh"
riverctl map normal Super F2 spawn "noti_usage cpu"
riverctl map normal Super F4 spawn "$HOME/.local/bin/menu_scripts/bemenu_killer"
riverctl map normal Super M spawn "$mail"
riverctl map normal Super N spawn "foot -T notes -e nvim ~/Documents/personal/notes/index.md"
riverctl map normal Super Print spawn "$screenshot -f"
riverctl map normal Super Return spawn "$term"
riverctl map normal Super T spawn "noti_date"
riverctl map normal Super V spawn "$term -T neovim -e nvim"
riverctl map normal Super W spawn "$browser"
riverctl map normal Super+Control D spawn "fnottctl dismiss"
riverctl map normal Super+Control E spawn "$emoji"
riverctl map normal Super+Control I spawn "$term -W 130x40 -T fuzzypkg -a float-t -e fuzzypkg"
riverctl map normal Super+Control N spawn "$term -T TODOS -a float-t -W 100x30 -e nvim ~/Documents/personal/notes/todo.md"
riverctl map normal Super+Control P spawn "wl-color-picker"
riverctl map normal Super+Control Print spawn "$recmenu"
riverctl map normal Super+Control S spawn "$HOME/.local/bin/menu_scripts/bemenu_sound"
riverctl map normal Super+Control U spawn "$term -W 100x40 -T popupgrade -a float-t -e popupgrade"
riverctl map normal Super+Control W spawn "noti_weather"
riverctl map normal Super+Shift C spawn "$clip"
riverctl map normal Super+Shift Delete spawn "$term -T htop -a float-t -W 120x35 -e htop"
riverctl map normal Super+Shift E spawn "Thunar"
riverctl map normal Super+Shift F11 spawn "$HOME/.config/river/scripts/swayidle-toggle.sh && $sig_1"
riverctl map normal Super+Shift F2 spawn "noti_usage ram"
riverctl map normal Super+Shift Print spawn "$screenshot -r"
riverctl map normal Super+Shift p spawn "$powermenu"

#-----------------------------------------------------#
#                      BINDS                          #
#-----------------------------------------------------#

# Close the focused view
riverctl map -repeat normal Super Q close
# Reload config
riverctl map normal Super+Control R spawn "$HOME/.config/river/init && notify-send -t 5000 -a System 'River' 'Config reloaded'"
# Focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous
riverctl map normal Super Down focus-view next
riverctl map normal Super Up focus-view previous
# Swap the focused view with the next/previous view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous
riverctl map normal Super+Shift Down swap next
riverctl map normal Super+Shift Up swap previous
# Focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous
# Send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous
# Bump the focused view to the top of the layout stack
riverctl map normal Super BackSpace zoom
riverctl map normal Super z zoom
# Decrease/increase the main ratio of rivertile(1)
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super Right send-layout-cmd rivertile "main-ratio +0.05"
riverctl map normal Super Left send-layout-cmd rivertile "main-ratio -0.05"
# Increment/decrement the main count of rivertile(1)
riverctl map normal Super Prior send-layout-cmd rivertile "main-count +1"
riverctl map normal Super Next send-layout-cmd rivertile "main-count -1"
# Move views
riverctl map -repeat normal Super+Control Left move left 25
riverctl map -repeat normal Super+Control Down move down 25
riverctl map -repeat normal Super+Control Up move up 25
riverctl map -repeat normal Super+Control Right move right 25
# Resize views
riverctl map -repeat normal Super+Alt Left resize horizontal -25
riverctl map -repeat normal Super+Alt Down resize vertical 25
riverctl map -repeat normal Super+Alt Up resize vertical -25
riverctl map -repeat normal Super+Alt Right resize horizontal 25
# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view
# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view
# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float
# Super+Space to toggle float
riverctl map normal Super Space toggle-float
# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen
# Use Super+Alt{H,J,K,L} to change layout orientation
riverctl map normal Super+Alt J send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super+Alt K send-layout-cmd rivertile "main-location top"
riverctl map normal Super+Alt H send-layout-cmd rivertile "main-location left"
riverctl map normal Super+Alt L send-layout-cmd rivertile "main-location right"
# XF86
riverctl map -repeat normal Control+Shift Down spawn "$HOME/.config/river/scripts/volume.sh down && $sig_3"
riverctl map -repeat normal Control+Shift Up spawn "$HOME/.config/river/scripts/volume.sh up && $sig_3"
riverctl map -repeat normal None XF86AudioLowerVolume spawn "$HOME/.config/river/scripts/volume.sh down && $sig_3"
riverctl map -repeat normal None XF86AudioRaiseVolume spawn "$HOME/.config/river/scripts/volume.sh up && $sig_3"
riverctl map normal Control+Shift Left spawn "brightnessctl set +5%"
riverctl map normal Control+Shift Right spawn "brightnessctl set +5%"
riverctl map normal None XF86AudioMute spawn "$HOME/.config/river/scripts/volume.sh mute && $sig_3"
riverctl map normal None XF86AudioNext spawn "$HOME/.config/river/scripts/mediactrl.sh --nxt"
riverctl map normal None XF86AudioPlay spawn "$HOME/.config/river/scripts/mediactrl.sh --play"
riverctl map normal None XF86AudioPrev spawn "$HOME/.config/river/scripts/mediactrl.sh --prv"
riverctl map normal None XF86AudioStop spawn "$HOME/.config/river/scripts/mediactrl.sh --stop"
riverctl map normal None XF86Calculator spawn "galculator"
riverctl map normal Super+Control M spawn "$HOME/.config/river/scripts/mediactrl.sh --noti"

#-----------------------------------------------------#
#                      TAGS                           #
#-----------------------------------------------------#

# Focus between tags
for i in $(seq 1 9); do
  tags=$((1 << ($i - 1)))

  # Super+[1-9] to focus tag [0-8]
  riverctl map normal Super $i set-focused-tags $tags

  # Super+Shift+[1-9] to tag focused view with tag [0-8]
  riverctl map normal Super+Shift $i set-view-tags $tags

  # Super+Control+[1-9] to toggle focus of tag [0-8]
  riverctl map normal Super+Control $i toggle-focused-tags $tags

  # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
  riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

all_tags=$(((1 << 32) - 1))
# Super+0 to focus all tags / Super+Shift+0 to tag focused view with all tags
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

## Scratchpad tags
scratchpad="$HOME/.config/river/scripts/scratchpads.sh"
zen_tag=$((1 << 11))
chat_tag=$((1 << 12))
dyn_tag=$((1 << 13))

scratch_tags=$((zen_tag | dyn_tag | chat_tag))
all_but_scratch_tag=$((all_tags ^ scratch_tags))
riverctl spawn-tagmask ${all_but_scratch_tag}

riverctl map normal Super F5 spawn "$scratchpad term"
riverctl map normal Super F6 spawn "$scratchpad discord"
riverctl map normal Super C toggle-focused-tags "${chat_tag}"
riverctl map normal Super+Shift Minus set-view-tags "${dyn_tag}"
riverctl map normal Super Minus toggle-focused-tags "${dyn_tag}"

## Sticky tag
sticky_tag=$((1 << 31))
all_tags=$(((1 << 32) - 1))
all_but_sticky_tag=$(($all_tags ^ $sticky_tag))

riverctl map normal Super+Shift Y toggle-view-tags $sticky_tag
riverctl spawn-tagmask ${all_but_sticky_tag}

# Modify the normal keybind to always select the sticky tag
for i in $(seq 1 9); do
  tags=$((1 << ($i - 1)))
  # Super+[1-9] to focus tag [0-8]
  riverctl map normal Super $i set-focused-tags $(($sticky_tag + $tags))
done

#-----------------------------------------------------#
#                      RULES                          #
#-----------------------------------------------------#

# Spawn to
riverctl rule-add -app-id "Firefox" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "Signal" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "Thunderbird" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "com.discordapp.Discord" tags $chat_tag
riverctl rule-add -app-id "com.transmissionbt.transmission_*" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "eu.betterbird.Betterbird" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "librewolf" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "org.keepassxc.KeePassXC" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "steam" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "vesktop" tags $chat_tag
riverctl rule-add -app-id "virt-manager" tags $((1 << (8 - 1)))
# Floaters
riverctl rule-add -app-id "Choose User Profile" float
riverctl rule-add -app-id "Firefox" -title "About Mozilla Firefox" float
riverctl rule-add -app-id "Firefox" -title "Library" float
riverctl rule-add -app-id "Firefox" -title "Picture-in-Picture" float
riverctl rule-add -app-id "GParted" float
riverctl rule-add -app-id "Gimp-*" float
riverctl rule-add -app-id "YouTube Music" float
riverctl rule-add -app-id "blueman-manager" float
riverctl rule-add -app-id "float-*" float
riverctl rule-add -app-id "galculator" float
riverctl rule-add -app-id "gimp" float
riverctl rule-add -app-id "gimp-*" float
riverctl rule-add -app-id "imv" float
riverctl rule-add -app-id "io.missioncenter.MissionCenter" float
riverctl rule-add -app-id "librewolf" -title "Library" float
riverctl rule-add -app-id "modorganizer.exe" float
riverctl rule-add -app-id "mpv" float
riverctl rule-add -app-id "net.lutris.Lutris" float
riverctl rule-add -app-id "nm-connection-editor" float
riverctl rule-add -app-id "nwg-look" float
riverctl rule-add -app-id "org.pulseaudio.pavucontrol" float
riverctl rule-add -app-id "quick_note" float
riverctl rule-add -app-id "signal" float
riverctl rule-add -app-id "signal-desktop" -title "Save File" float
riverctl rule-add -app-id "steam" float
riverctl rule-add -app-id "swayimg" float
riverctl rule-add -app-id "thunar" -title "Confirm to replace files" float
riverctl rule-add -app-id "thunar" -title "File Operation Progress" float
riverctl rule-add -app-id "vesktop" float
riverctl rule-add -app-id "vesktop.bin" float
riverctl rule-add -app-id "xdg-desktop-portal-gtk" float
riverctl rule-add -app-id "yad" float
riverctl rule-add -title "Picture-in-Picture" float
riverctl rule-add -title "ProtonUp-Qt - Wine/Proton Installer" float
riverctl rule-add -title "gtk*" float
riverctl rule-add -title "popup title with spaces" float
riverctl rule-add -title "zoom" float
# Decorations
riverctl rule-add ssd
riverctl rule-add -app-id "steam" csd

#-----------------------------------------------------#
#                      START                          #
#-----------------------------------------------------#

# WLR-portals need this part
dbus-update-activation-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river

# Exec-once
executes="waybar swayidle foot mako wl-paste swaybg"

for execute in $executes; do
  pidof -q "$execute" && continue
  case $execute in
  "foot")
    "$execute" -s &
    ;;
  "wl-paste")
    "$execute" --watch cliphist -max-items 100 store &
    ;;
  "swaybg")
    "$execute" -m fill -i ~/.local/share/wall/bg &
    ;;
  "swayidle")
    "$execute" -w &
    ;;
  *)
    "$execute" &
    ;;
  esac
done >/dev/null 2>&1

pkill -x rivertile
$rivertile &
