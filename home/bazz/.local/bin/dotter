#!/usr/bin/env bash
#	  Dotfiles 3.3
#	  Manage dotfiles with a Git repository
#	  Dependencies: git
#	  Usage: Just run the script. `Dotfiles-list` has the list of dotfiles to be used.
#	  Stolen from: https://codeberg.org/jorisvandijk/dotfiles-hyprland/src/branch/main/home/joris/.local/bin/Dotfiles

# Locations
dotfiles_repo=~/Documents/projects/river-dotfiles
dotfiles_list=~/.local/share/dotlist

# Function to add new dotfiles
add() {
  echo "[*] Adding dotfiles from list..."
  cd $dotfiles_repo
  while read -r dotfile; do
    if [[ -f $dotfile ]]; then
      cp --parents $dotfile $dotfiles_repo
    elif [[ -d $dotfile ]]; then
      cp --parents -r $dotfile $dotfiles_repo
    fi
  done <$dotfiles_list

  git add -A
  if [[ -n $(git status -s) ]]; then
    git status

    read -p "Enter a commit message: " commit_message
    git commit -m "$commit_message"
  fi
}

# Function to push changes
push() {
  echo "[*] Pushing to repository..."
  cd $dotfiles_repo
  git push
}

case "$1" in
"add")
  add
  ;;
"push")
  push
  ;;
*)
  echo "Usage: add | push"
  exit 1
  ;;
esac

# Cleanup
# find $dotfiles_repo -mindepth 1 -maxdepth 1 -not -name ".git" -not -name ".gitignore" -exec rm -rf {} \;
