#!/usr/bin/env bash

# Litle script to search from internet
# Usage: just type and press enter to search from google
# Or specify search engine with letter <a> archwiki <b> brave <d> duckduckgo <y> youtube <w> wikipedia
# example: "a pipewire" opens pipewire section from archwiki
# To clear history_file type: "clear"

history_file="$HOME/.cache/search_history"
[ -f "$history_file" ] || touch "$history_file"

# Browser
browser="$BROWSER"

# Search engines
web_search="https://www.google.com/search?q="
declare -A engines=(
  [a]="https://wiki.archlinux.org/title/"
  [b]="https://search.brave.com/search?q="
  [d]="https://duckduckgo.com/?q="
  [w]="https://en.wikipedia.org/w/index.php?search="
  [y]="https://www.youtube.com/results?search_query="
)

# URL encode
urlencode() {
  local LC_ALL=C
  local length="${#1}"
  for ((i = 0; i < length; i++)); do
    local c="${1:i:1}"
    case $c in
    [a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
    ' ') printf '+' ;;
    *) printf '%%%02X' "'$c" ;;
    esac
  done
}

# Prompt
keyword=$(tac "$history_file" | fuzzel -d -p "" -l 1 --placeholder "Search from internet...")

# Handle empty input
[ -z "$keyword" ] && exit 0

# Word "clear" wipes history
if [[ "$keyword" == "clear" ]]; then
  rm "$history_file"
  touch "$history_file" # Create a new empty file
  notify-send -t 3000 "fuzzel" "Search history cleared"
  exit 0
fi
# Don't safe duplicates
if ! grep -Fxq "$keyword" "$history_file"; then
  echo "$keyword" >>"$history_file"
fi

search_engine="${keyword%% *}"
search_word="${keyword#* }"

# Open in browser
if [[ -n "${engines[$search_engine]}" && "$search_word" != "$keyword" ]]; then
  "$browser" "${engines[$search_engine]}$(urlencode "$search_word")"
else
  "$browser" "${web_search}$(urlencode "$keyword")"
fi
